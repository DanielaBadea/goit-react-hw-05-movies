{"version":3,"file":"static/js/757.11054701.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","components/TrailerPlayer/TrailerPlayer.jsx","helpers/api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinnerContainer\":\"Spinner_spinnerContainer__vzmN8\"};","import React from \"react\";\nimport styles from './Spinner.module.css'\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Spinner = () => {\n    return(\n        <>\n       <div className={styles.spinnerContainer}>\n            <ClipLoader color=\"hsla(0, 67%, 53%, 1)\" />\n        </div>\n        </>\n    )\n}\nexport default Spinner;","import { getTrailerMovie } from \"helpers/api\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactPlayer from 'react-player'\nimport { useParams } from \"react-router-dom\";\nimport Spinner from \"components/Spinner/Spinner\";\n// import styles from './TrailerPlayer.module.css';\n\nconst TrailerPlayer = () => {\n    const [trailer, setTrailer] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\nconst { movieId } = useParams();\n\nuseEffect(() => {\n    setIsLoading(true)\n    getTrailerMovie(movieId)\n        .then(response => {\n            console.log(\"Trailer:\", response);\n            const trailerData = response.results[0]; // Accesam primul obiect din array-ul results\n            setTrailer(trailerData);\n            console.log(\"Cheia videoclipului:\", trailerData && trailerData.key);\n            console.log(\"URL-ul videoclipului:\", trailerData && `https://www.youtube.com/watch?v=${trailerData.key}`);\n            setIsLoading(false);\n                }).catch(error => {\n                    console.error(\"Error fetching trailer:\", error);\n                    setIsLoading(false);\n                })\n}, [movieId]);\n\n    return(\n        <>\n        {\n            isLoading&&<Spinner/>\n        }\n        {trailer && (\n                <ReactPlayer\n                    url={`https://www.youtube.com/watch?v=${trailer.key}`}\n                    controls={true}\n                    width=\"70%\"\n                    height=\"70%\"\n                />\n            )}\n        </>\n    )\n}\nexport default TrailerPlayer;\n","\nimport axios from 'axios';\n\nconst KEY = \"fca03d30ba5379eeeeccf116ade4f7b3\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${KEY}&language=en-US`);\n        if (response.status !== 200) {\n            throw new Error(\"Error fetching trending movies!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200) {\n            throw new Error(\"Error fetching details movies!\");\n        }\n        return response.data;\n    } catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesCredits = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n    }catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesReviews = async(movieId)=>{\n    try{\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error);\n    }\n}\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n        if (response.status !== 200){ \n            throw new Error(\"Error fetching movies search!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        throw error; \n    }\n}\n\nexport const getTrailerMovie = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/videos?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200){\n            throw new Error (\"Error fetching movies video!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error)\n    }\n}"],"names":["_jsx","_Fragment","children","className","styles","ClipLoader","color","_useState","useState","_useState2","_slicedToArray","trailer","setTrailer","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","getTrailerMovie","then","response","console","log","trailerData","results","key","concat","catch","error","_jsxs","Spinner","ReactPlayer","url","controls","width","height","KEY","axios","IMAGE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","sent","status","Error","abrupt","data","t0","stop","apply","arguments","getMoviesDetails","_ref2","_callee2","_context2","_x","getMoviesCredits","_ref3","_callee3","_context3","_x2","getMoviesReviews","_ref4","_callee4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_context5","_x4","_ref6","_callee6","_context6","_x5"],"sourceRoot":""}