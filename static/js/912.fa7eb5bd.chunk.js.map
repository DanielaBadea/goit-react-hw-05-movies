{"version":3,"file":"static/js/912.fa7eb5bd.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/PostersMovies/PostersMovies.module.css?faaf","components/PostersMovies/PostersMovies.jsx","webpack://goit-react-hw-05-movies/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","helpers/api.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/MoviesPage/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"PostersMovies_gallery__c43A8\",\"itemsImg\":\"PostersMovies_itemsImg__4ianM\",\"itemImg\":\"PostersMovies_itemImg__+Y7t3\",\"posterTitle\":\"PostersMovies_posterTitle__upuiu\",\"linkPoster\":\"PostersMovies_linkPoster__pgKZr\",\"posterVote\":\"PostersMovies_posterVote__mKOvX\"};","import React from \"react\";\nimport PropTypes from 'prop-types'; \nimport { IMAGE_URL } from \"helpers/api\";\nimport styles from \"./PostersMovies.module.css\"\nimport { Link, useNavigate } from \"react-router-dom\";\nimport defaultImage from '../../img/no-movie.jpg'\n\nconst PostersMovies = ({ movies, context }) => {\n    const navigate = useNavigate();\n\n    const handleMovieClick = (movieId) => {\n        if (context === \"movies\") {\n            navigate(`/movies/${movieId}`);\n        } else {\n            navigate(`/movies/movies/${movieId}`);\n        }\n    };\n\n    const getReleaseYear = (releaseDate) => {\n        if (releaseDate) {\n            const year = releaseDate.slice(0, 4);\n            return year;\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <ul className={styles.gallery}>\n                {movies.map(movie => (\n                    <li key={movie.id} className={styles.itemsImg}>\n                       <Link to={`/movies/${movie.id}`} \n                       className={styles.linkPoster} \n                       onClick={() => handleMovieClick(movie.id)}\n                       >\n                        {\n                            movie.poster_path ? \n                            <img\n                            className={styles.itemImg} \n                            src={IMAGE_URL + movie.poster_path} \n                            alt={movie.title}\n                           />\n                           :\n                           <img\n                           className={styles.itemImg} \n                           src={defaultImage} \n                           alt={'No Poster Available'}\n                           />\n                        }\n                        <p className={styles.posterVote}>{movie.vote_average.toFixed(1)}</p>\n                        <p className={styles.posterTitle}>{movie.title}/{getReleaseYear(movie.release_date)}</p>\n                        </Link> \n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n\nPostersMovies.propTypes =  {\n    movies: PropTypes.array.isRequired,\n}\nexport default PostersMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"spinnerContainer\":\"Spinner_spinnerContainer__vzmN8\"};","import React from \"react\";\nimport styles from './Spinner.module.css'\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Spinner = () => {\n    return(\n        <>\n       <div className={styles.spinnerContainer}>\n            <ClipLoader color=\"hsla(0, 67%, 53%, 1)\" />\n        </div>\n        </>\n    )\n}\nexport default Spinner;","\nimport axios from 'axios';\n\nconst KEY = \"fca03d30ba5379eeeeccf116ade4f7b3\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${KEY}&language=en-US`);\n        if (response.status !== 200) {\n            throw new Error(\"Error fetching trending movies!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200) {\n            throw new Error(\"Error fetching details movies!\");\n        }\n        return response.data;\n    } catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesCredits = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n    }catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesReviews = async(movieId)=>{\n    try{\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error);\n    }\n}\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n        if (response.status !== 200){ \n            throw new Error(\"Error fetching movies search!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        throw error; \n    }\n}\n\nexport const getTrailerMovie = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/videos?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200){\n            throw new Error (\"Error fetching movies video!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error)\n    }\n}","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"SearchBar_formWrapper__I3PPS\",\"inputWrapper\":\"SearchBar_inputWrapper__Y3m19\",\"inputForm\":\"SearchBar_inputForm__-O6gW\",\"formBtn\":\"SearchBar_formBtn__Z+YNJ\",\"iconForm\":\"SearchBar_iconForm__3Pm9-\"};","// components/SearchBar.js\nimport React, { useState } from \"react\";\nimport { IoIosSearch } from \"react-icons/io\";\nimport styles from './SearchBar.module.css'\n\nconst SearchBar = ({ onSubmit }) =>{\n    const [query, setQuery] = useState(\"\");\n\n    const handleChange = (e) => {\n        setQuery(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(query);\n        setQuery(\"\"); \n    }\n\n    return(\n        <form onSubmit={handleSubmit} className={styles.formWrapper}>\n           <div className={styles.inputWrapper}>\n    <input \n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        name='query'\n        value={query}\n        onChange={handleChange}\n        className={styles.inputForm}\n    />\n    <button type=\"submit\" className={styles.formBtn}>\n        <IoIosSearch className={styles.iconForm}/>\n    </button>\n    </div>\n        </form>\n    )\n}\n\nexport default SearchBar;\n","import React, { useEffect, useState } from \"react\";\nimport { getSearchMovies } from \"../../helpers/api\";\nimport SearchBar from \"components/SearchBar/SearchBar\";\nimport PostersMovies from \"components/PostersMovies/PostersMovies\";\nimport Spinner from \"components/Spinner/Spinner\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const [isSearchLoading, setIsSearchLoading] = useState(false);\n\n    useEffect(() => {\n        if (query.trim() !== \"\") {\n            setIsSearchLoading(true); \n            getSearchMovies(query)\n                .then(response => {\n                    console.log(\"Movies search:\", response);\n                    setMovies(response.results);\n                })\n                .catch(error => {\n                    console.log(\"Error fetching movies search:\", error.message);\n                })\n                .finally(() => {\n                    setIsSearchLoading(false); \n                });\n        }\n    }, [query]);\n\n    const handleSubmit = (newQuery) => {\n        if (newQuery.trim() !== '') {\n            setQuery(newQuery);\n        }\n    }\n\n    return (\n        <>\n            <SearchBar query={query} onSubmit={handleSubmit} />\n            {isSearchLoading ? <Spinner /> : <PostersMovies movies={movies} context = \"movies\"/>}\n        </>\n    );\n}\nexport default Movies;\n"],"names":["_ref","movies","context","navigate","useNavigate","_jsx","_Fragment","children","className","styles","map","movie","_jsxs","Link","to","concat","id","onClick","movieId","poster_path","src","IMAGE_URL","alt","title","defaultImage","vote_average","toFixed","releaseDate","release_date","slice","ClipLoader","color","KEY","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","status","Error","abrupt","data","t0","console","error","stop","apply","arguments","getMoviesDetails","_ref2","_callee2","_context2","_x","getMoviesCredits","_ref3","_callee3","_context3","_x2","getMoviesReviews","_ref4","_callee4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_context5","log","_x4","getTrailerMovie","_ref6","_callee6","_context6","_x5","onSubmit","_useState","useState","_useState2","_slicedToArray","setQuery","e","preventDefault","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","IoIosSearch","setMovies","_useState3","_useState4","_useState5","_useState6","isSearchLoading","setIsSearchLoading","useEffect","trim","then","results","catch","message","finally","SearchBar","newQuery","Spinner","PostersMovies"],"sourceRoot":""}