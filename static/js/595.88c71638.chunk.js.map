{"version":3,"file":"static/js/595.88c71638.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","components/TrailerPlayer/TrailerPlayer.jsx","helpers/api.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesDetails/MoviesDetails.module.css?e2c8","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"spinnerContainer\":\"Spinner_spinnerContainer__vzmN8\"};","import React from \"react\";\nimport styles from './Spinner.module.css'\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst Spinner = () => {\n    return(\n        <>\n       <div className={styles.spinnerContainer}>\n            <ClipLoader color=\"hsla(0, 67%, 53%, 1)\" />\n        </div>\n        </>\n    )\n}\nexport default Spinner;","import { getTrailerMovie } from \"helpers/api\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactPlayer from 'react-player'\nimport { useParams } from \"react-router-dom\";\n// import styles from './TrailerPlayer.module.css';\n\nconst TrailerPlayer = () => {\n    const [trailer, setTrailer] = useState(null);\nconst { movieId } = useParams();\n\nuseEffect(() => {\n    getTrailerMovie(movieId)\n        .then(response => {\n            console.log(\"Trailer:\", response);\n            const trailerData = response.results[0]; // Accesam primul obiect din array-ul results\n            setTrailer(trailerData);\n            console.log(\"Cheia videoclipului:\", trailerData && trailerData.key);\n            console.log(\"URL-ul videoclipului:\", trailerData && `https://www.youtube.com/watch?v=${trailerData.key}`);\n        })\n}, [movieId]);\n\n    return(\n        <>\n        {trailer && (\n                <ReactPlayer\n                    url={`https://www.youtube.com/watch?v=${trailer.key}`}\n                    controls={true}\n                    width=\"100%\"\n                    height=\"100%\"\n                />\n            )}\n        </>\n    )\n}\nexport default TrailerPlayer;\n","\nimport axios from 'axios';\n\nconst KEY = \"fca03d30ba5379eeeeccf116ade4f7b3\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\nexport const getTrendingMovies = async () => {\n    try {\n        const response = await axios.get(`/trending/movie/day?api_key=${KEY}&language=en-US`);\n        if (response.status !== 200) {\n            throw new Error(\"Error fetching trending movies!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const getMoviesDetails = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200) {\n            throw new Error(\"Error fetching details movies!\");\n        }\n        return response.data;\n    } catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesCredits = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n    }catch(error){\n        console.error(error);\n    }\n};\n\nexport const getMoviesReviews = async(movieId)=>{\n    try{\n        const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`)\n        if(response.status !==200){\n            throw new Error (\"Error fetching credits movies!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error);\n    }\n}\n\nexport const getSearchMovies = async (query) => {\n    try {\n        const response = await axios.get(`/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n        if (response.status !== 200){ \n            throw new Error(\"Error fetching movies search!\");\n        }\n        return response.data;\n    } catch (error) {\n        console.log(error);\n        throw error; \n    }\n}\n\nexport const getTrailerMovie = async (movieId) => {\n    try{\n        const response = await axios.get(`/movie/${movieId}/videos?api_key=${KEY}&language=en-US`)\n        if(response.status !== 200){\n            throw new Error (\"Error fetching movies video!\")\n        }\n        return response.data;\n\n    }catch(error){\n        console.error(error)\n    }\n}","// extracted by mini-css-extract-plugin\nexport default {\"containerBtn\":\"MoviesDetails_containerBtn__KBiG1\",\"btnBack\":\"MoviesDetails_btnBack__MaNOi\",\"linkContent\":\"MoviesDetails_linkContent__erxp5\",\"icon\":\"MoviesDetails_icon__HGDgR\",\"wrapper\":\"MoviesDetails_wrapper__uiFnj\",\"containerMovies\":\"MoviesDetails_containerMovies__rwZPa\",\"contaonerPosition\":\"MoviesDetails_contaonerPosition__hBxeb\",\"posterVote\":\"MoviesDetails_posterVote__A08nQ\",\"containerDetails\":\"MoviesDetails_containerDetails__x5xDa\",\"description\":\"MoviesDetails_description__nn0we\",\"overview\":\"MoviesDetails_overview__Z7osk\",\"genres\":\"MoviesDetails_genres__BRdjB\",\"boxInfo\":\"MoviesDetails_boxInfo__V19LS\",\"info\":\"MoviesDetails_info__7t3XW\",\"linksComponents\":\"MoviesDetails_linksComponents__yqZEY\",\"link\":\"MoviesDetails_link__yacK6\"};","import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink, Outlet, useParams} from \"react-router-dom\";\nimport { IMAGE_URL, getMoviesDetails } from \"helpers/api\";\nimport styles from './MoviesDetails.module.css';\nimport { MdArrowBackIos } from \"react-icons/md\";\nimport defaultImage from '../../img/no-movie.jpg'\nimport Spinner from \"components/Spinner/Spinner\";\nimport TrailerPlayer from \"components/TrailerPlayer/TrailerPlayer\";\n\nconst MoviesDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        setIsLoading(true); \n        getMoviesDetails(movieId)\n            .then(response => {\n                console.log('Response movie details:', response)\n                setMovie(response);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, [movieId]);\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n    \n    if (!movie) {\n        return <Spinner/>\n    }\n\n    return (\n        <>\n            <div className={styles.wrapper}>\n                <div className={styles.containerBtn}>\n                    <Link to='/' className={styles.btnBack}>\n                        <div className={styles.linkContent}>\n                            <MdArrowBackIos className={styles.icon} />\n                            <span>Go back</span>\n                        </div>\n                    </Link>\n                </div>\n                <div className={styles.containerMovies}>\n                    <div className={styles.contaonerPosition}>\n                        {!movie.poster_path || movie.poster_path === '' ? (\n                            <img\n                                src={defaultImage}\n                                alt=\"No Poster Available\"\n                                className={styles.itemPoster}\n                            />\n                        ) : (\n                            <img\n                                src={IMAGE_URL + movie.poster_path}\n                                alt={movie.title}\n                                className={styles.itemPoster}\n                            />\n                        )}\n                        <p className={styles.posterVote}>{movie.vote_average.toFixed(1)}</p>\n                    </div>\n                    <div className={styles.containerDetails}>\n                        <h2>{movie.title}/{movie.release_date.slice(0,4)}</h2>\n                        <p className={styles.description}><span className={styles.overview}>Overview: </span>{movie.overview}</p>\n                        <p className={styles.description}><span className={styles.genres}>Genres: </span>{movie.genres.map(genre => genre.name).join(' ')}</p>\n                        {/* <Link to ='trailer' className={styles.trailer}>Trailer</Link> */}\n                        <TrailerPlayer/>\n                    </div>\n                </div>\n                <div className={styles.boxInfo}>\n                    <h3 className={styles.info}>Additional information</h3>\n                    <div className={styles.linksComponents}>\n                        <NavLink to='cast' className={styles.link}>Casts</NavLink>\n                        <NavLink to='reviews' className={styles.link}>Reviews</NavLink>\n                    </div>\n                    <Outlet/>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MoviesDetails;\n"],"names":["_jsx","_Fragment","children","className","styles","ClipLoader","color","_useState","useState","_useState2","_slicedToArray","trailer","setTrailer","movieId","useParams","useEffect","getTrailerMovie","then","response","console","log","trailerData","results","key","concat","ReactPlayer","url","controls","width","height","KEY","axios","IMAGE_URL","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","sent","status","Error","abrupt","data","t0","error","stop","apply","arguments","getMoviesDetails","_ref2","_callee2","_context2","_x","getMoviesCredits","_ref3","_callee3","_context3","_x2","getMoviesReviews","_ref4","_callee4","_context4","_x3","getSearchMovies","_ref5","_callee5","query","_context5","_x4","_ref6","_callee6","_context6","_x5","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","finally","Spinner","_jsxs","Link","to","MdArrowBackIos","poster_path","src","alt","title","defaultImage","vote_average","toFixed","release_date","slice","overview","genres","map","genre","name","join","TrailerPlayer","NavLink","Outlet"],"sourceRoot":""}